{"version":3,"sources":["Firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","props","test","window","scrollTo","left","top","document","body","scrollHeight","behavior","isClick","e","querySelector","value","preventDefault","setState","data","state","push","name","length","shift","database","ref","set","showChat","map","key","style","display","background","padding","borderRadius","margin","clickname","stateinputchat","position","width","className","type","defaultValue","onClick","event","defaultname","on","note","val","nextProps","nextState","this","paddingBottom","marginTop","action","bottom","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e2061bbb.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyD8_vM88XIXWjibYtgWlV1McFm9HvTWFXQ\",\r\n    authDomain: \"appchat-66ace.firebaseapp.com\",\r\n    databaseURL: \"https://appchat-66ace-default-rtdb.firebaseio.com\",\r\n    projectId: \"appchat-66ace\",\r\n    storageBucket: \"appchat-66ace.appspot.com\",\r\n    messagingSenderId: \"259600696182\",\r\n    appId: \"1:259600696182:web:e979ba195b1b3f9b0c7057\",\r\n    measurementId: \"G-H10REREQWR\"\r\n};\r\nexport const firebaseConnect = firebase.initializeApp(firebaseConfig);\r\n","import firebase from 'firebase/app';\nimport firebaseConnect from './Firebase.js';\nimport React from 'react';\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data:[],\n      name:'Tên',\n      defaultname:'Tên',\n    }\n  }\n  test = () => {\n    window.scrollTo({ left: 0, top: document.body.scrollHeight, behavior: \"smooth\" });\n  } \n  componentWillMount() {\n    var datafind = firebase.database().ref('/mes');\n    datafind.on('value',(note) => {\n        this.setState({data:note.val()})\n    })\n  }\n  isClick = (e) => {\n    var test = document.querySelector('.inputchat').value\n    e.preventDefault();\n    this.setState({\n      data:this.state.data.push(this.state.name  + ':' + ' ' + test)\n    })\n    if (this.state.data.length > 30) \n    {\n      this.state.data.shift();\n    }\n    var datames = firebase.database().ref('/');\n    datames.set({\n      \"mes\":this.state.data,\n    })\n    document.querySelector('.inputchat').value =  '';\n   window.scrollTo({ left: 0, top: document.body.scrollHeight, behavior: \"smooth\" })\n  }\n  componentWillUpdate(nextProps, nextState) {\n    window.scrollTo({ left: 0, top: document.body.scrollHeight, behavior: \"smooth\" })\n  }\n  cw\n  showChat = () => {\n    return this.state.data.map((value,key) => {\n      return <li key={key}  ><p style={{display: 'inline-block', background: '#007bff', padding: '7px 12px', borderRadius: '18px', margin: '18px 0'}}>{value}</p></li>\n    })\n\n  }\n  clickname = (e) => {\n    e.preventDefault();\n    this.setState({\n      name:document.querySelector('.inputname').value,\n    })\n  } \n  stateinputchat = () => {\n    if (this.state.name === 'Tên') \n    {\n      return (\n        <div style={{position: 'fixed',top: '0',width:'71%',display:'block',background:'white',padding:'15px 0'}}>\n        <h3 className=\"text-center mt-2 mb-3\">App chat Long dev</h3>\n         <form className=\"d-flex\" >\n          <input type='text' className=\"inputname form-control\" defaultValue=\"Tên\"/>\n          <button className=\"btn btn-primary ml-2\" onClick={(event) => this.clickname(event)} >Đổi</button>\n        </form>\n        </div>\n      )\n    }\n    else {\n      return <h3 style={{position: 'fixed',top: '0',width:'71%',display:'block',background:'white',padding:'15px 0'}} className=\"text-center mb-3\">App chat Long dev</h3>;\n    }\n  } \n  render() {\n\n    return (\n    <div className=\"container\">\n      <div>\n        \n        {this.stateinputchat()}\n        <ul style={{paddingBottom:'100px',marginTop:'150px'}} className=\"list-unstyled\">{this.showChat()}</ul>\n        <form action=\"/\" style={{position: 'fixed',bottom: '0',width:'71%',display:'block',background:'white',padding:'15px 0'}}>\n          <div className=\"form-group d-flex mb-0\" >\n            <input type='text' className=\"inputchat form-control\"  />\n            <button type=\"submit\"  className=\"btn btn-primary ml-2\" onClick={(event) => this.isClick(event)} >Gửi</button>\n          </div>\n        </form>\n      </div>\n    </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}